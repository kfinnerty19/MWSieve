equations: y^2 + y = -2*x^6 + 9*x^2 - 7, y^2 = -2*x^6 + 24*x^4 - 72*x^2 + 54, y^2 + x^3*y = -x^6 - 3*x^4 + 6

*******************************************************************************************
Step 1: Convert to bielliptic format using NewFunctions.m (Magma)

load("NewFunctions.m");

X:=HyperellipticCurve(-2*x^6 + 9*x^2 - 7,1);
Y:=HyperellipticCurve(-2*x^6 + 24*x^4 - 72*x^2 + 54);
Z:=HyperellipticCurve(-x^6 - 3*x^4 + 6,x^3);

BiellipticModel(X);
BiellipticModel(Y);
BiellipticModel(Z);

equations:= [-8*x^6 + 36*x^2 - 27,-2*x^6 + 24*x^4 - 72*x^2 + 54,-3*x^6 - 12*x^4 + 24];

*******************************************************************************************
Step 2: Compute relevant input information in MAGMA using allcurvesComputation.m
pts:=[
    [ (-1 , -1 , 1), (-1 , 1 , 1), (1 , -1 , 1), (1 , 1 , 1) ],
    [ (-1 , -2 , 1), (-1 , 2 , 1), (1 , -2 , 1), (1 , 2 , 1) ],
    [ (-1 , -3 , 1), (-1 , 3 , 1), (1 , -3 , 1), (1 , 3 , 1) ]
];

gens:=
    [
    [
        [
            x^2 - 1,
            -1
        ],
        [
            x^2 - 1,
            -x
        ]
    ],
    [
        [
            x^2 - x - 5,
            -2
        ],
        [
            x^2 + x - 5,
            -2
        ]
    ],
    [
        [
            x^2 - 1,
            -3*x
        ],
        [
            x^2 - 1,
            3
        ]
    ]
];

projE1E2:= [
    [
        [ (52 , 352 , 1), (0 , 1 , 0) ],
        [ (0 , 1 , 0), (153/4 , -2565/8 , 1) ]
    ],
    [
        [ (-2 , -4 , 1), (54 , -108 , 1) ],
        [ (-2 , -4 , 1), (54 , 108 , 1) ]
    ],
    [
        [ (0 , 1 , 0), (52 , 352 , 1) ],
        [ (193/4 , 2327/8 , 1), (0 , 1 , 0) ]
    ]
];

ordinary_pr:=[
    [ 7, 13, 17 ],
    [ 7, 13, 17 ],
    [ 7, 13, 17 ]
];
*******************************************************************************************
Step 3: Run QCBielliptic for rational points information using qc_running_file.sage and https://github.com/kfinnerty19/QC_bielliptic or https://github.com/bianchifrancesca/QC_bielliptic
Output:
**************************************************
Curve # 1
testing for y^2 = -8*x^6 + 36*x^2 - 27
Number of elements in Omega = 11
x x^2 + 27
Found something?
1
Other points = 30
Number of elements in Omega = 11
x x^2 + 27
Found something?
1
x x^2 + 27
Found something?
1
Other points = 194
Number of elements in Omega = 11
Other points = 284
........
True
**************************************************
Curve # 2
testing for y^2 = -2*x^6 + 24*x^4 - 72*x^2 + 54
Number of elements in Omega = 3
Other points = 10
Number of elements in Omega = 3
x^2 - 3 x
Found something?
1
x^2 - 3 x
Found something?
1
Other points = 42
Number of elements in Omega = 3
Other points = 52
........
True
**************************************************
Curve # 3
testing for y^2 = -3*x^6 - 12*x^4 + 24
Number of elements in Omega = 11
x x - 1
Found something?
3
Other points = 30
Not all rational points detected (or, more likely, point at infinity detected)
Number of elements in Omega = 11
x x - 1
Found something?
3
Other points = 177
Not all rational points detected (or, more likely, point at infinity detected)
Number of elements in Omega = 11
x^2 + 2 x
Found something?
2
x^2 + 2 x
Found something?
2
Other points = 150
........
False

all_fake_coeffs := [[[[[1438, 774], [946, 862], [779, 2194], [1566, 314], [1116, 905]], [[610, 1480], [1200, 1201]], [], [[565, 2022], [635, 2006], [2356, 2103], [1449, 463], [1550, 1456], [1934, 571], [1795, 147]], [[100, 712], [1378, 286]], [[454, 2284], [483, 544]], [[1225, 1888], [1623, 2361]], [[129, 2359], [1487, 1141]], [[648, 1027], [1191, 604], [689, 250]], [[890, 1207], [847, 1254]], [[1751, 1164], [333, 222], [1277, 157]]], [[[4723, 13530], [23837, 15032], [10577, 328], [17983, 28234], [23889, 3176], [4671, 25386], [6084, 13693], [22476, 14869], [6084, 14869], [22476, 13693], [23889, 25386], [4671, 3176], [10577, 28234], [17983, 328], [4723, 15032], [23837, 13530]], [[9490, 1198], [19070, 27364], [22649, 13819], [5911, 14743], [3395, 3122], [25165, 25440], [24160, 10815], [4400, 17747], [23759, 17109], [4801, 11453], [23759, 11453], [4801, 17109], [24160, 17747], [4400, 10815], [3395, 25440], [25165, 3122], [22649, 14743], [5911, 13819], [9490, 27364], [19070, 1198], [14280, 14281], [14280, 14281]], [[13497, 18793], [15063, 9769], [25418, 12176], [3142, 16386], [25034, 19189], [3526, 9373], [15632, 18013], [12928, 10549], [15632, 10549], [12928, 18013], [25034, 9373], [3526, 19189], [25418, 16386], [3142, 12176], [13497, 9769], [15063, 18793], [22990, 6382], [5570, 22180], [22990, 22180], [5570, 6382]], [[16677, 15452], [11883, 13110], [26137, 18237], [2423, 10325], [17600, 8842], [10960, 19720], [26580, 16495], [1980, 12067], [26580, 12067], [1980, 16495], [17600, 19720], [10960, 8842], [26137, 10325], [2423, 18237], [16677, 13110], [11883, 15452]], [[1871, 7238], [26689, 21324], [27953, 16228], [607, 12334], [27953, 12334], [607, 16228], [1871, 21324], [26689, 7238]], [[14543, 21769], [14017, 6793], [16881, 15323], [11679, 13239], [16881, 13239], [11679, 15323], [14543, 6793], [14017, 21769]], [[26714, 15150], [1846, 13412], [19787, 25226], [8773, 3336], [9510, 16601], [19050, 11961], [8858, 18609], [19702, 9953], [23037, 26440], [5523, 2122], [26278, 26488], [2282, 2074], [26278, 2074], [2282, 26488], [23037, 2122], [5523, 26440], [8858, 9953], [19702, 18609], [9510, 11961], [19050, 16601], [19787, 3336], [8773, 25226], [26714, 13412], [1846, 15150]], [[15313, 6034], [13247, 22528], [12200, 15742], [16360, 12820], [23244, 21221], [5316, 7341], [1107, 27005], [27453, 1557], [15992, 5524], [12568, 23038], [27611, 22203], [949, 6359], [27611, 6359], [949, 22203], [15992, 23038], [12568, 5524], [1107, 1557], [27453, 27005], [23244, 7341], [5316, 21221], [12200, 12820], [16360, 15742], [15313, 22528], [13247, 6034], [15567, 11685], [12993, 16877], [15567, 16877], [12993, 11685]], [[19327, 26985], [9233, 1577], [13973, 28452], [14587, 110], [13973, 110], [14587, 28452], [19327, 1577], [9233, 26985], [23978, 9504], [4582, 19058], [23978, 19058], [4582, 9504]], [[22428, 27238], [6132, 1324], [15345, 17743], [13215, 10819], [15345, 10819], [13215, 17743], [22428, 1324], [6132, 27238], [28450, 6634], [110, 21928], [28450, 21928], [110, 6634]], [[231, 3177], [28329, 25385], [18142, 11857], [10418, 16705], [119, 25621], [28441, 2941], [15212, 7034], [13348, 21528], [12464, 14300], [16096, 14262], [15110, 874], [13450, 27688], [15110, 27688], [13450, 874], [12464, 14262], [16096, 14300], [15212, 21528], [13348, 7034], [119, 2941], [28441, 25621], [18142, 16705], [10418, 11857], [231, 25385], [28329, 3177], [27384, 5793], [1176, 22769], [27384, 22769], [1176, 5793]]], [[[48280, 68872], [35240, 14650], [69910, 61430], [13610, 22092], [21333, 3780], [62187, 79742], [22550, 53346], [60970, 30176], [22550, 30176], [60970, 53346], [21333, 79742], [62187, 3780], [69910, 22092], [13610, 61430], [48280, 14650], [35240, 68872]], [[58752, 39245], [24768, 44277], [58752, 44277], [24768, 39245], [5768, 57718], [77752, 25804], [52122, 77810], [31398, 5712], [52122, 5712], [65517, 43776], [5768, 25804], [18003, 39746], [65517, 39746], [18003, 43776], [31398, 77810], [77752, 57718]], [[63130, 33865], [20390, 49657], [53941, 81774], [29579, 1748], [48877, 15426], [34643, 68096], [47394, 65749], [36126, 17773], [47394, 17773], [36126, 65749], [48877, 68096], [34643, 15426], [53941, 1748], [29579, 81774], [63130, 49657], [20390, 33865]], [[80637, 16420], [2883, 67102], [38964, 35059], [44556, 48463], [62085, 37803], [21435, 45719], [28626, 19857], [54894, 63665], [28626, 63665], [54894, 19857], [62085, 45719], [21435, 37803], [38964, 48463], [44556, 35059], [80637, 67102], [2883, 16420]], [[44665, 76067], [38855, 7455], [44665, 7455], [38855, 76067], [39045, 55573], [44475, 27949], [27565, 74311], [55955, 9211], [6089, 11866], [77431, 71656], [55136, 64240], [28384, 19282], [55136, 19282], [28384, 64240], [6089, 71656], [77431, 11866], [27565, 9211], [55955, 74311], [39045, 27949], [44475, 55573]], [[4474, 56284], [79046, 27238], [43429, 3345], [40091, 80177], [56317, 72559], [27203, 10963], [75233, 9088], [8287, 74434], [33604, 56896], [49916, 26626], [54728, 31020], [28792, 52502], [76214, 21681], [7306, 61841], [11073, 72283], [72447, 11239], [48617, 20624], [34903, 62898], [55391, 32543], [28129, 50979], [55391, 50979], [28129, 32543], [48617, 62898], [34903, 20624], [11073, 11239], [72447, 72283], [76214, 61841], [7306, 21681], [54728, 52502], [28792, 31020], [33604, 26626], [49916, 56896], [75233, 74434], [8287, 9088], [56317, 10963], [27203, 72559], [43429, 80177], [40091, 3345], [4474, 27238], [79046, 56284]], [[39124, 83045], [44396, 477], [78540, 28172], [4980, 55350], [80671, 80142], [2849, 3380], [71214, 7204], [12306, 76318], [13451, 9939], [70069, 73583], [82168, 64030], [1352, 19492], [57037, 55377], [26483, 28145], [10508, 26151], [73012, 57371], [10508, 57371], [73012, 26151], [57037, 28145], [26483, 55377], [82168, 19492], [1352, 64030], [13451, 73583], [70069, 9939], [71214, 76318], [12306, 7204], [80671, 3380], [2849, 80142], [78540, 55350], [4980, 28172], [39124, 477], [44396, 83045]], [[32485, 49645], [51035, 33877], [72523, 39068], [10997, 44454], [23991, 15631], [59529, 67891], [23589, 65221], [59931, 18301], [70029, 27640], [13491, 55882], [69404, 78934], [14116, 4588], [69404, 4588], [14116, 78934], [70029, 55882], [13491, 27640], [23589, 18301], [59931, 65221], [23991, 67891], [59529, 15631], [72523, 44454], [10997, 39068], [32485, 33877], [51035, 49645]], [[81673, 46194], [1847, 37328], [63418, 69889], [20102, 13633], [54457, 71219], [29063, 12303], [80436, 76992], [3084, 6530], [52024, 11113], [31496, 72409], [41851, 46861], [41669, 36661], [41851, 36661], [41669, 46861], [52024, 72409], [31496, 11113], [80436, 6530], [3084, 76992], [54457, 12303], [29063, 71219], [63418, 13633], [20102, 69889], [81673, 37328], [1847, 46194]], [[57626, 17315], [25894, 66207], [57626, 66207], [25894, 17315], [45751, 70901], [37769, 12621], [47551, 19196], [35969, 64326], [66161, 2452], [17359, 81070], [38093, 51084], [45427, 32438], [68292, 7550], [15228, 75972], [15177, 5816], [68343, 77706], [39717, 36597], [43803, 46925], [30275, 45257], [53245, 38265], [30275, 38265], [53245, 45257], [39717, 46925], [43803, 36597], [15177, 77706], [68343, 5816], [68292, 75972], [15228, 7550], [38093, 32438], [45427, 51084], [66161, 81070], [17359, 2452], [47551, 64326], [35969, 19196], [45751, 12621], [37769, 70901]], [[83404, 2644], [116, 80878], [83404, 80878], [116, 2644], [849, 39622], [82671, 43900], [53347, 7896], [30173, 75626], [11925, 19986], [71595, 63536], [4934, 73873], [78586, 9649], [28523, 26288], [54997, 57234], [31126, 79714], [52394, 3808], [25356, 60974], [58164, 22548], [11178, 2502], [72342, 81020], [46383, 64084], [37137, 19438], [57032, 67803], [26488, 15719], [57032, 15719], [26488, 67803], [46383, 19438], [37137, 64084], [11178, 81020], [72342, 2502], [25356, 22548], [58164, 60974], [31126, 3808], [52394, 79714], [28523, 57234], [54997, 26288], [4934, 9649], [78586, 73873], [11925, 63536], [71595, 19986], [53347, 75626], [30173, 7896], [849, 43900], [82671, 39622]]]], [[[[2072, 1003], [965, 887], [1880, 1917]], [[1416, 2065], [620, 581], [1853, 2262], [1505, 1376]], [[1109, 1790], [60, 1331], [664, 2197]]], [[[5853, 16979], [7301, 15679], [16980, 5852], [21262, 12882], [12883, 21261], [22710, 11582], [11583, 22709], [15680, 7300]], [[11914, 10027], [1, 0], [16649, 18534], [21398, 28250], [7165, 311], [312, 7164], [10028, 11913], [1, 0], [28251, 21397], [18535, 16648]], [[24378, 7656], [4185, 20905], [4265, 15798], [24298, 12763], [18034, 15828], [10529, 12733], [19108, 9040], [9455, 19521], [4932, 14405], [23631, 14156], [14157, 23630], [15829, 18033], [7657, 24377], [22772, 9351], [14406, 4931], [9041, 19107], [12734, 10528], [15799, 4264], [5791, 19210], [9352, 22771], [19522, 9454], [12764, 24297], [19211, 5790], [20906, 4184]]], [[[51506, 22724], [32017, 60797], [22725, 51505], [60798, 32016], [3252, 73272], [80271, 10249], [52720, 14782], [30803, 68739], [58095, 50632], [25428, 32889], [9167, 21417], [74356, 62104], [21418, 9166], [62105, 74355], [50633, 58094], [32890, 25427], [14783, 52719], [68740, 30802], [73273, 3251], [10250, 80270]], [[1615, 220], [81908, 83301], [221, 1614], [83302, 81907], [2758, 62225], [80765, 21296], [69351, 24176], [14172, 59345], [28803, 45003], [54720, 38518], [21448, 3327], [62075, 80194], [25294, 49421], [58229, 34100], [49422, 25293], [34101, 58228], [3328, 21447], [80195, 62074], [45004, 28802], [38519, 54719], [24177, 69350], [59346, 14171], [62226, 2757], [21297, 80764]], [[82225, 17040], [1298, 66481], [11885, 67972], [71638, 15549], [67973, 11884], [15550, 71637], [17041, 82224], [66482, 1297]]]], [[[[1516, 1837], [1487, 1433], [34, 2284]], [[361, 1856], [2020, 715], [1664, 656], [483, 2325], [1665, 200], [1451, 90], [2278, 1537]], [[2167, 1959], [277, 1362], [2140, 1536], [954, 910], [720, 1703]], [[2038, 1491], [1135, 2023], [1906, 138]], [[2366, 2211], [1457, 2278]], [], [[1450, 927], [805, 1896]], [[1137, 2320], [861, 569]], [[1075, 1284], [2113, 9], [2054, 1552]], [], [[1247, 35], [1892, 1832]]], [[[7495, 18266], [21067, 10296], [21067, 18266], [7495, 10296], [8435, 16267], [20127, 12295], [9068, 15175], [19494, 13387], [8099, 2526], [20463, 26036], [23940, 27084], [4622, 1478], [21100, 25152], [7462, 3410], [27070, 28319], [1492, 243], [10127, 24074], [18435, 4488], [7485, 2787], [21077, 25775], [21077, 2787], [7485, 25775], [18435, 24074], [10127, 4488], [1492, 28319], [27070, 243], [7462, 25152], [21100, 3410], [4622, 27084], [23940, 1478], [20463, 2526], [8099, 26036], [19494, 15175], [9068, 13387], [20127, 16267], [8435, 12295]], [[12858, 3755], [15704, 24807], [2752, 27611], [25810, 951], [17262, 7953], [11300, 20609], [10959, 7771], [17603, 20791], [17603, 7771], [10959, 20791], [11300, 7953], [17262, 20609], [25810, 27611], [2752, 951], [15704, 3755], [12858, 24807]], [], [[12141, 18088], [16421, 10474], [25592, 5934], [2970, 22628], [13654, 22270], [14908, 6292], [14908, 22270], [13654, 6292], [2970, 5934], [25592, 22628], [16421, 18088], [12141, 10474]], [[17831, 28048], [10731, 514], [8317, 26853], [20245, 1709], [20245, 26853], [8317, 1709], [10731, 28048], [17831, 514]], [[14086, 22324], [14476, 6238], [14476, 22324], [14086, 6238], [20815, 2187], [7747, 26375], [26616, 21409], [1946, 7153], [27393, 17774], [1169, 10788], [13558, 24891], [15004, 3671], [24442, 17110], [4120, 11452], [14363, 18822], [14199, 9740], [14199, 18822], [14363, 9740], [4120, 17110], [24442, 11452], [15004, 24891], [13558, 3671], [1169, 17774], [27393, 10788], [1946, 21409], [26616, 7153], [7747, 2187], [20815, 26375]], [[3349, 22765], [25213, 5797], [11496, 23974], [17066, 4588], [3728, 3192], [24834, 25370], [25711, 13989], [2851, 14573], [2851, 13989], [25711, 14573], [24834, 3192], [3728, 25370], [17066, 23974], [11496, 4588], [25213, 22765], [3349, 5797]], [[11001, 26461], [17561, 2101], [19879, 10340], [8683, 18222], [26255, 11380], [2307, 17182], [16170, 6729], [12392, 21833], [18900, 11636], [9662, 16926], [9158, 5403], [19404, 23159], [19404, 5403], [9158, 23159], [9662, 11636], [18900, 16926], [12392, 6729], [16170, 21833], [2307, 11380], [26255, 17182], [8683, 10340], [19879, 18222], [17561, 26461], [11001, 2101]], [[5415, 17456], [23147, 11106], [23147, 17456], [5415, 11106], [903, 12004], [27659, 16558], [5660, 18239], [22902, 10323], [6357, 17915], [22205, 10647], [23627, 17275], [4935, 11287], [4935, 17275], [23627, 11287], [22205, 17915], [6357, 10647], [22902, 18239], [5660, 10323], [27659, 12004], [903, 16558]], [[3218, 1929], [25344, 26633], [25344, 1929], [3218, 26633]], [[24993, 23204], [3569, 5358], [3569, 23204], [24993, 5358], [11637, 24093], [16925, 4469], [9800, 25067], [18762, 3495], [18762, 25067], [9800, 3495], [16925, 24093], [11637, 4469]]], [[[61684, 2549], [21838, 80973], [32119, 60975], [51403, 22547], [32119, 22547], [61684, 80973], [51403, 60975], [21838, 2549], [36113, 57083], [47409, 26439], [47409, 57083], [36113, 26439]], [[3289, 52724], [80233, 30798], [49654, 50224], [33868, 33298], [8293, 71719], [75229, 11803], [19008, 66297], [64514, 17225], [64514, 66297], [19008, 17225], [75229, 71719], [8293, 11803], [33868, 50224], [49654, 33298], [80233, 52724], [3289, 30798]], [[47, 44225], [83475, 39297], [46872, 32001], [36650, 51521], [36650, 32001], [46872, 51521], [83475, 44225], [47, 39297], [41761, 41761], [41761, 41761]], [[18092, 21588], [65430, 61934], [65430, 21588], [18092, 61934]], [[80158, 54626], [48276, 22222], [3364, 54626], [80158, 28896], [1198, 21750], [35246, 61300], [82324, 61772], [82324, 21750], [1198, 61772], [35246, 22222], [3364, 28896], [48276, 61300]], [[15090, 30629], [68432, 52893], [50445, 80738], [33077, 2784], [17873, 33158], [65649, 50364], [6340, 8350], [77182, 75172], [77182, 8350], [6340, 75172], [65649, 33158], [17873, 50364], [33077, 80738], [50445, 2784], [68432, 30629], [15090, 52893]], [[12536, 63747], [70986, 19775], [39007, 65441], [44515, 18081], [45739, 11023], [37783, 72499], [14404, 27331], [69118, 56191], [69118, 27331], [14404, 56191], [37783, 11023], [45739, 72499], [44515, 65441], [39007, 18081], [70986, 63747], [12536, 19775]], [[51309, 24109], [32213, 59413], [81105, 63494], [2417, 20028], [42176, 15250], [41346, 68272], [71077, 72437], [12445, 11085], [58451, 47769], [25071, 35753], [21132, 33627], [62390, 49895], [62390, 33627], [21132, 49895], [25071, 47769], [58451, 35753], [12445, 72437], [71077, 11085], [41346, 15250], [42176, 68272], [2417, 63494], [81105, 20028], [32213, 24109], [51309, 59413]], [[47957, 43695], [35565, 39827], [37269, 11836], [46253, 71686], [20314, 28228], [63208, 55294], [13005, 78845], [70517, 4677], [70517, 78845], [13005, 4677], [63208, 28228], [20314, 55294], [46253, 11836], [37269, 71686], [35565, 43695], [47957, 39827]], [[75191, 28496], [8331, 55026], [8331, 28496], [75191, 55026]], [[80511, 52539], [3011, 30983], [11231, 19132], [72291, 64390], [5074, 71735], [78448, 11787], [75373, 9410], [8149, 74112], [8149, 9410], [75373, 74112], [78448, 71735], [5074, 11787], [72291, 19132], [11231, 64390], [3011, 52539], [80511, 30983], [81876, 18234], [1646, 65288], [1646, 18234], [81876, 65288]]]]];

************************************************************************
Step 4: Compute sieving primes in MAGMA using MWSPrimesComputations.m (see below)
Output:
***********************************************************************************************
MWSPrimes1 := [[ 83, 1879, 3457, 3853, 6101 ],[ 709, 1153, 2887, 3343, 3709, 3733, 3853, 4027, 4099, 4639, 6547, 6679, 8011, 8161, 8563, 9631 ],[ 1879, 3457, 3853 ]];

MWSPrimes2 :=[
    [ 29, 47, 83, 431, 709, 911, 1481, 1879, 2069, 2273, 2957, 3061, 3457, 3853, 4943, 5749, 5879, 6101, 8069, 8161, 9511 ],
    [ 31, 109, 127, 157, 199, 251, 307, 349, 379, 523, 601, 709, 829, 1049, 1153, 1621, 1801, 1879, 1933, 2683, 2687, 2887, 2957, 3061, 3343, 3457,
    3709, 3733, 3853, 4027, 4099, 4639, 4789, 5303, 5521, 5749, 5839, 5879, 6547, 6679, 8011, 8161, 8419, 8539, 8563, 8761, 9631 ],
    [ 89, 149, 557, 709, 1721, 1879, 2069, 2693, 2909, 3061, 3251, 3457, 3853, 5749, 5879, 6101, 8161, 9511 ]
];


MWSPrimes4 :=[
    [ 29, 31, 47, 83, 109, 127, 193, 227, 421, 431, 617, 709, 829, 911, 1097, 1481, 1621, 1801, 1879, 1979, 2069, 2089, 2273, 2749, 2957, 3061, 
    3221, 3457, 3709, 3853, 4397, 4943, 5749, 5879, 6101, 8069, 8117, 8161, 9511, 9631 ],
    [ 31, 61, 109, 127, 157, 193, 199, 251, 307, 313, 337, 349, 379, 421, 523, 601, 617, 709, 751, 829, 991, 1049, 1153, 1621, 1721, 1801, 1879, 
    1933, 2683, 2687, 2887, 2957, 3061, 3121, 3169, 3229, 3343, 3457, 3709, 3733, 3853, 4027, 4099, 4639, 4789, 5303, 5521, 5581, 5741, 5749, 5779,
    5839, 5879, 6547, 6679, 6841, 6959, 7351, 8011, 8161, 8209, 8419, 8539, 8563, 8581, 8761, 8839, 9157, 9421, 9631 ],
    [ 29, 31, 59, 89, 109, 127, 149, 193, 359, 421, 557, 593, 617, 709, 829, 911, 1097, 1621, 1721, 1801, 1879, 2069, 2089, 2339, 2633, 2693, 2749,
    2909, 2957, 3061, 3083, 3251, 3457, 3709, 3853, 5749, 5879, 6101, 6599, 8161, 9511, 9631 ]
];
************************************************************************************************************
Step 5: Compute torsion information using TorsionStatistics.m

result: all three are in T2

************************************************************************************************************************
Step 6: Run the sieve using MainCode.m

Output:
    Curve 1
-8*x^6 + 36*x^2 - 27
Omega has size 11
Omega 1 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 83, 1879, 3457, 3853, 6101 ]
number of extra points: [ 5, 16, 16 ]
number of cosets: 80
after aux_int: 80
after torsion: 160
        160 cosets remaining after v=83
  128 cosets eliminated at v = 1879
        32 cosets remaining after v=1879
  32 cosets eliminated at v = 3457
        0 cosets remaining after v=3457
necessary primes [ 1879, 3457 ]
true [ 7, 13, 1 ]
Omega 2 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 83, 1879, 3457, 3853, 6101 ]
number of extra points: [ 2, 22, 16 ]
number of cosets: 44
after aux_int: 44
after torsion: 88
  48 cosets eliminated at v = 83
        40 cosets remaining after v=83
  40 cosets eliminated at v = 1879
        0 cosets remaining after v=1879
necessary primes [ 83, 1879 ]
true [ 7, 13, 1 ]
Omega 3 out of 11
easy
Omega 4 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 83, 1879, 3457, 3853, 6101 ]
number of extra points: [ 7, 16, 16 ]
number of cosets: 112
after aux_int: 112
after torsion: 224
  112 cosets eliminated at v = 83
        112 cosets remaining after v=83
  112 cosets eliminated at v = 1879
        0 cosets remaining after v=1879
necessary primes [ 83, 1879 ]
true [ 7, 13, 1 ]
Omega 5 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 83, 1879, 3457, 3853, 6101 ]
number of extra points: [ 2, 8, 20 ]
number of cosets: 16
after aux_int: 16
after torsion: 32
        32 cosets remaining after v=83
  32 cosets eliminated at v = 1879
        0 cosets remaining after v=1879
necessary primes [ 1879 ]
true [ 7, 13, 1 ]
Omega 6 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 83, 1879, 3457, 3853, 6101 ]
number of extra points: [ 2, 8, 40 ]
number of cosets: 16
after aux_int: 16
after torsion: 32
        32 cosets remaining after v=83
  32 cosets eliminated at v = 1879
        0 cosets remaining after v=1879
necessary primes [ 1879 ]
true [ 7, 13, 1 ]
Omega 7 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 83, 1879, 3457, 3853, 6101 ]
number of extra points: [ 2, 24, 32 ]
number of cosets: 48
after aux_int: 48
after torsion: 96
  32 cosets eliminated at v = 83
        64 cosets remaining after v=83
  32 cosets eliminated at v = 1879
        32 cosets remaining after v=1879
  32 cosets eliminated at v = 3457
        0 cosets remaining after v=3457
necessary primes [ 83, 1879, 3457 ]
true [ 7, 13, 1 ]
Omega 8 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 83, 1879, 3457, 3853, 6101 ]
number of extra points: [ 2, 28, 24 ]
number of cosets: 56
after aux_int: 56
after torsion: 112
  64 cosets eliminated at v = 83
        48 cosets remaining after v=83
  24 cosets eliminated at v = 1879
        24 cosets remaining after v=1879
  24 cosets eliminated at v = 3457
        0 cosets remaining after v=3457
necessary primes [ 83, 1879, 3457 ]
true [ 7, 13, 1 ]
Omega 9 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 83, 1879, 3457, 3853, 6101 ]
number of extra points: [ 3, 12, 24 ]
number of cosets: 36
after aux_int: 36
after torsion: 72
  24 cosets eliminated at v = 83
        48 cosets remaining after v=83
  32 cosets eliminated at v = 1879
        16 cosets remaining after v=1879
  16 cosets eliminated at v = 3457
        0 cosets remaining after v=3457
necessary primes [ 83, 1879, 3457 ]
true [ 7, 13, 1 ]
Omega 10 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 83, 1879, 3457, 3853, 6101 ]
number of extra points: [ 2, 12, 36 ]
number of cosets: 24
after aux_int: 24
after torsion: 48
        48 cosets remaining after v=83
  48 cosets eliminated at v = 1879
        0 cosets remaining after v=1879
necessary primes [ 1879 ]
true [ 7, 13, 1 ]
Omega 11 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 83, 1879, 3457, 3853, 6101 ]
number of extra points: [ 3, 28, 44 ]
number of cosets: 84
after aux_int: 84
after torsion: 168
  24 cosets eliminated at v = 83
        144 cosets remaining after v=83
  144 cosets eliminated at v = 1879
        0 cosets remaining after v=1879
necessary primes [ 83, 1879 ]
true [ 7, 13, 1 ]
Failed []
Curve 2
-2*x^6 + 24*x^4 - 72*x^2 + 54
Omega has size 3
Omega 1 out of 3
[ 7, 13 ]
aux_int = 1
mws_primes
[ 709, 1153, 2887, 3343, 3709, 3733, 3853, 4027, 4099, 4639, 6547, 6679, 8011, 
8161, 8563, 9631 ]
number of extra points: [ 3, 8, 20 ]
number of cosets: 24
after aux_int: 24
after torsion: 48
  48 cosets eliminated at v = 709
        0 cosets remaining after v=709
necessary primes [ 709 ]
true [ 7, 13, 1 ]
Omega 2 out of 3
[ 7, 13 ]
aux_int = 1
mws_primes
[ 709, 1153, 2887, 3343, 3709, 3733, 3853, 4027, 4099, 4639, 6547, 6679, 8011, 
8161, 8563, 9631 ]
number of extra points: [ 4, 10, 24 ]
number of cosets: 40
after aux_int: 40
after torsion: 80
  80 cosets eliminated at v = 709
        0 cosets remaining after v=709
necessary primes [ 709 ]
true [ 7, 13, 1 ]
Omega 3 out of 3
[ 7, 13 ]
aux_int = 1
mws_primes
[ 709, 1153, 2887, 3343, 3709, 3733, 3853, 4027, 4099, 4639, 6547, 6679, 8011, 
8161, 8563, 9631 ]
number of extra points: [ 3, 24, 8 ]
number of cosets: 72
after aux_int: 72
after torsion: 144
  144 cosets eliminated at v = 709
        0 cosets remaining after v=709
necessary primes [ 709 ]
true [ 7, 13, 1 ]
Failed []
Curve 3
-3*x^6 - 12*x^4 + 24
Omega has size 11
Omega 1 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 1879, 3457, 3853 ]
number of extra points: [ 3, 36, 12 ]
number of cosets: 108
after aux_int: 108
after torsion: 216
  216 cosets eliminated at v = 1879
        0 cosets remaining after v=1879
necessary primes [ 1879 ]
true [ 7, 13, 1 ]
Omega 2 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 1879, 3457, 3853 ]
number of extra points: [ 7, 16, 16 ]
number of cosets: 112
after aux_int: 112
after torsion: 224
  192 cosets eliminated at v = 1879
        32 cosets remaining after v=1879
  32 cosets eliminated at v = 3457
        0 cosets remaining after v=3457
necessary primes [ 1879, 3457 ]
true [ 7, 13, 1 ]
Omega 3 out of 11
easy
Omega 4 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 1879, 3457, 3853 ]
number of extra points: [ 3, 12, 4 ]
number of cosets: 36
after aux_int: 36
after torsion: 72
  72 cosets eliminated at v = 1879
        0 cosets remaining after v=1879
necessary primes [ 1879 ]
true [ 7, 13, 1 ]
Omega 5 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 1879, 3457, 3853 ]
number of extra points: [ 2, 8, 12 ]
number of cosets: 16
after aux_int: 16
after torsion: 32
  32 cosets eliminated at v = 1879
        0 cosets remaining after v=1879
necessary primes [ 1879 ]
true [ 7, 13, 1 ]
Omega 6 out of 11
easy
Omega 7 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 1879, 3457, 3853 ]
number of extra points: [ 2, 16, 16 ]
number of cosets: 32
after aux_int: 32
after torsion: 64
  64 cosets eliminated at v = 1879
        0 cosets remaining after v=1879
necessary primes [ 1879 ]
true [ 7, 13, 1 ]
Omega 8 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 1879, 3457, 3853 ]
number of extra points: [ 2, 24, 24 ]
number of cosets: 48
after aux_int: 48
after torsion: 96
        96 cosets remaining after v=1879
  96 cosets eliminated at v = 3457
        0 cosets remaining after v=3457
necessary primes [ 3457 ]
true [ 7, 13, 1 ]
Omega 9 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 1879, 3457, 3853 ]
number of extra points: [ 3, 20, 16 ]
number of cosets: 60
after aux_int: 60
after torsion: 120
        120 cosets remaining after v=1879
  120 cosets eliminated at v = 3457
        0 cosets remaining after v=3457
necessary primes [ 3457 ]
true [ 7, 13, 1 ]
Omega 10 out of 11
easy
Omega 11 out of 11
[ 7, 13 ]
aux_int = 1
mws_primes
[ 1879, 3457, 3853 ]
number of extra points: [ 2, 12, 20 ]
number of cosets: 24
after aux_int: 24
after torsion: 48
  48 cosets eliminated at v = 1879
        0 cosets remaining after v=1879
necessary primes [ 1879 ]
true [ 7, 13, 1 ]

> assert Failed eq [];
> print "Failed",Failed;
Failed []
